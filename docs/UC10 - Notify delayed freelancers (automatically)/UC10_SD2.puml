@startuml
autonumber

title sd_sendEmails
participant "ra:FreelancersRecord" as RA
participant ":Platform" as PLAT
participant "trans:PaymentTransaction" as PT
participant "transactionsList\n:PaymentTransactionsList" as LPT
participant "org\n:Organization" as ORG
participant "lstFreel\n:List<Freelancer>" as LF
participant "freel\n:Freelancer" as FREEL

[o-> RA : sendEmails()
activate RA
  
RA -> PLAT : org=getOrganization()
activate PLAT
deactivate PLAT

RA -> ORG : transactionsList = getPaymentTransactionsList()
activate ORG
deactivate ORG
  
LOOP for each freelancer
  
RA -> LF : freel = get(i)
activate LF
deactivate LF
  
RA -> RA : int numberTransactions = 0
RA -> RA : int delay = 0
RA -> RA : int amountForHourDelay = 0
  
LOOP for each transaction
  
RA -> LPT : trans = get(i)
activate LPT
deactivate LPT
  
RA -> PT : freelTrans = getFreelancer()
activate PT
deactivate PT
  
OPT if freel = freelTrans
  
RA -> RA : numberTransactions++
  
RA -> PT : delayTrans = getDelay()
activate PT
deactivate PT
  
OPT if delayTrans>0
  
RA -> RA : delay++
RA -> RA : amountForHourDelay++
  
end OPT
end OPT  
end LOOP
  
RA -> RA : percentageDelayFreel = delay / numberTransactions
RA -> RA : averageDelay = getAverageDelay()
  
OPT if delay>3 && percentageDelayFreel > averageDelay
  
RA -> FREEL : email = getEmail()
activate FREEL
deactivate FREEL
  
[<- RA : sendEmail(percentageDelayFreel,amountForHourDelay)
  
end OPT  
end LOOP
deactivate RA
  
  
@enduml