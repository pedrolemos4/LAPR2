@startuml
skinparam classAttributeIconSize 0

class POTApplication
{
  +static getInstance()
  +getCurrentSession()
}

class UserSession
{
  +getUserEmail()
}

class Task {
  -String id
  -String briefDescription
  -Integer timeDuration
  -Double costPerHour
  -String taskCategory
}

class Freelancer {
  -String id
  -String name
  -String expertiseLevel
  -String email
  -String NIF
  -String IBAN
  -String address
  -String country
}

class Organization {
  -String name
  -String NIF
  +getTaskList()
  +getPaymentTransactionList()
  
}

class TaskList {
  +getTaskByStringValue(taskString)
}

class Platform {
  -String designation
  +OrganizationsRecord getOrganizationsRecord()
  +FreelancersRecord getFreelancersRecord()
}

class FreelancersRecord {
  +getFreelancerByStringValue(freelancerString)
}

class OrganizationsRecord {
  +getOrganizationByUserEmail(email)
}

class CreatePaymentTransactionController {
  +newPaymentTransaction(payTId, taskString, eDate, delay, workQualityDescription, freelancerString)
  +paymentTransactionRegister()
}

class CreatePaymentTransactionUI {
}

class PaymentTransaction{
  -String id
  -Date endDate
  -Integer delay
  -String workQualityDescription
  +generatePayAmount(task, free)
  +PaymentTransaction(payTId, task, free, endDate, delay, workQualityDescription)
}

class PaymentTransactionList{
  +newPaymentTransaction(payTId, task, free, endDate, delay, workQualityDescription)
  +validatePaymentTransaction(payT)
  +paymentTransactionRegister(payT)
  +addPaymentTransaction(payT)
}

class Date {
 +convertStringToDate(eDate) 
}

CreatePaymentTransactionUI ..> CreatePaymentTransactionController
CreatePaymentTransactionController ..> Platform
CreatePaymentTransactionController ..> Task
CreatePaymentTransactionController ..> Organization
CreatePaymentTransactionController ..> POTApplication
CreatePaymentTransactionController ..> UserSession
CreatePaymentTransactionController ..> TaskList
CreatePaymentTransactionController ..> FreelancersRecord
CreatePaymentTransactionController ..> OrganizationsRecord
CreatePaymentTransactionController ..> PaymentTransactionList
CreatePaymentTransactionController ..> Date
Platform "1" --> "1" FreelancersRecord : has
Platform "1" --> "1" OrganizationsRecord : has

FreelancersRecord "1" --> "*" Freelancer : has
OrganizationsRecord "1" --> "*" Organization : has
Organization "1" --> "1" TaskList : has
Organization "1" --> "1" PaymentTransactionList : has
PaymentTransactionList "1" --> "*" PaymentTransaction : has
TaskList "1" --> "*" Task : has
Task "1..*" --> "1" Freelancer : is assigned to

PaymentTransaction "1" --> "1" Freelancer : relates to
PaymentTransaction "1" --> "1" Task : relates to

@enduml