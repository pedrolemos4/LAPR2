@startuml
skinparam classAttributeIconSize 0

class POTApplication
{
  +static getInstance()
  +getCurrentSession()
}

class UserSession
{
  +getUserEmail()
}

class Task {
  -String id
  -String briefDescription
  -Integer timeDuration
  -Double costPerHour
  -String taskCategory
  +getTaskExecData(task)
}

class Freelancer {
  -String id
  -String name
  -String expertiseLevel
  -String email
  -String NIF
  -String IBAN
  -String address
  -String country
}

class Organization {
  -String name
  -String NIF
  +getTasksList()
  +generatePayAmount(task, free)
  +newPaymentTransaction(task, taskExec, free, payAmount)
  +validatePaymentTransaction(payT)
  +paymentTransactionRegister(payT)
  +addPaymentTransaction(payT)
}

class TasksList {
  +taskExists(taskId)
}

class Platform {
  -String designation
  +OrganizationsRecord getOrganizationsRecord()
  +FreelancersRecord getFreelancersRecord()
}

class FreelancersRecord {
  +freelancerExists(frlId)
}

class OrganizationsRecord  {
  +getOrganizationByUserEmail(email)
}

class CreatePaymentTransactionController {
  +newPaymentTransaction(taskId, briefDescription, timeDuration, costPerHour, taskCategory, \nendDate, delay, workQualityDescription, \nfrlId, name, expertiseLevel, email, NIF, IBAN, address, country)
  +paymentTransactionRegister()
}

class CreatePaymentTransactionUI {
}

class PaymentTransaction{
  +PaymentTransaction(task, taskExec, free, payAmount)
}

class TaskExecution {
 -Date endDate
 -Double delay
 -String workQualityDescription
}

CreatePaymentTransactionUI ..> CreatePaymentTransactionController
CreatePaymentTransactionController ..> Platform
CreatePaymentTransactionController ..> Task
CreatePaymentTransactionController ..> Organization
CreatePaymentTransactionController ..> POTApplication
CreatePaymentTransactionController ..> UserSession
CreatePaymentTransactionController ..> TasksList
CreatePaymentTransactionController ..> FreelancersRecord
CreatePaymentTransactionController ..> OrganizationsRecord
Platform "1" --> "1" FreelancersRecord : has
Platform "1" --> "1" OrganizationsRecord : has

FreelancersRecord "1" --> "*" Freelancer : has
OrganizationsRecord "1" --> "*" Organization : has
Organization "1" --> "1" TasksList : has
Organization "1" --> "*" PaymentTransaction : has
TasksList "1" --> "*" Task : has
Task "1" --> "1" TaskExecution : has
Task "1..*" --> "1" Freelancer : is assigned to

PaymentTransaction "1" --> "1" Freelancer : relates to
PaymentTransaction "1" --> "1" Task : relates to
PaymentTransaction "1" --> "1" TaskExecution : relates to

@enduml